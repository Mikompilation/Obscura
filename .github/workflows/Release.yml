name: Release

on:
  workflow_dispatch:
    inputs:
      Version:
        description: 'Version number e.g. 1.0'
        required: true
        default: '0.0.1'

env:
  BUILD_TYPE: Release
  BUILD_STATIC: true

jobs:
  build:
    runs-on: ${{ matrix.sys.os }}
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: pwsh, name: windows }
          - { os: ubuntu-latest,  shell: bash, name: linux  }
          - { os: macos-latest,   shell: bash, name: macos  }
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install Dependencies
        if: ${{ matrix.sys.os == 'ubuntu-latest' }}
        run: |
          sudo apt install zip libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev
          sudo apt update
          sudo apt upgrade

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_STATIC=${{env.BUILD_STATIC}}

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target Extractor
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target ModelConverter

      - name: Zip Windows App
        if: ${{ matrix.sys.os == 'windows-latest' }}
        working-directory: build/Obscura/Release
        shell: pwsh
        run: |
          Copy-Item "../ZeroFileDictionary.json"
          Compress-Archive * ../../Obscura_${{ matrix.sys.name }}_v${{ github.event.inputs.version }}.zip

      - name: Zip OSX App
        if: ${{ matrix.sys.os == 'macos-latest' }}
        working-directory: build/
        shell: pwsh
        run: |
          Get-ChildItem -Path Obscura/* | Compress-Archive -DestinationPath Obscura_${{ matrix.sys.name }}_v${{ github.event.inputs.version }}.zip

      - name: Zip Ubuntu App
        if: ${{ matrix.sys.os == 'ubuntu-latest' }}
        working-directory: build
        run: |
          zip -r Obscura_${{ matrix.sys.name }}_v${{ github.event.inputs.version }}.zip Obscura/*

      - name: Release
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e
        with:
          draft: false
          allowUpdates: true
          replacesArtifacts: false
          name: "Obscura v${{ github.event.inputs.version }}"
          tag: "v${{ github.event.inputs.version }}"
          artifacts: build/Obscura_${{ matrix.sys.name }}_v${{ github.event.inputs.version }}.zip
